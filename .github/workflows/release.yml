name: Release

on:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+

jobs:
  release:
    runs-on: ubuntu-latest
    steps:

    - name: Checkout koDi repo
      uses: actions/checkout@v2

    - name: Get the tag
      id: get_tag
      run: |
        echo ::set-output name=TAG::${GITHUB_REF/refs\/tags\//}
        echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\/v/}

    - name: Install TeXLive
      env:
        TEXLIVE_INSTALL_PREFIX: ${{ runner.tool_cache }}/texlive
        TEXLIVE_PROFILE_PATH: ${{ github.workspace }}/.github/texlive.profile
        TEXLIVE_PACKAGES_PATH: ${{ github.workspace }}/.github/texlive.packages
        TEXLIVE_DOC_PACKAGES_PATH: ${{ github.workspace }}/.github/texlive.doc.packages
      run: |
        cd ${{ runner.temp }}
        wget -q http://mirror.ctan.org/systems/texlive/tlnet/install-tl-unx.tar.gz
        tar -xzf install-tl-unx.tar.gz
        cd install-tl-20* || exit 1
        ./install-tl --portable --profile="$TEXLIVE_PROFILE_PATH"
        readarray -t TEXLIVE_PACKAGES < "$TEXLIVE_PACKAGES_PATH"
        $TEXLIVE_INSTALL_PREFIX/bin/x86_64-linux/tlmgr install "${TEXLIVE_PACKAGES[@]}"
        readarray -t TEXLIVE_DOC_PACKAGES < "$TEXLIVE_DOC_PACKAGES_PATH"
        $TEXLIVE_INSTALL_PREFIX/bin/x86_64-linux/tlmgr install "${TEXLIVE_DOC_PACKAGES[@]}"
        echo "::add-path::$TEXLIVE_INSTALL_PREFIX/bin/x86_64-linux"

    - name: Run build
      run:
        make VERSION=${{ steps.get_tag.outputs.version }} dist/pkg/kodi.zip
        mv dist/pkg/kodi.zip dist/pkg/kodi-${{ steps.get_tag.outputs.version }}.zip

    - name: Release on Github
      uses: docker://antonyurchenko/git-release:v3
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        DRAFT_RELEASE: "false"
        CHANGELOG_FILE: "CHANGELOG.md"
        ALLOW_EMPTY_CHANGELOG: "false"
        ALLOW_TAG_PREFIX: "true"
        RELEASE_NAME: "koDi ${{ steps.get_tag.outputs.version }}"
      with:
        args: |
          dist/pkg/kodi-${{ steps.get_tag.outputs.version }}.zip

    # - name: Submit to CTAN
    #   uses: paolobrasolin/ctan-submit-action@v1
    #   with:
    #     action: upload
    #     file_path: dist/pkg/kodi-${{ steps.get_tag.outputs.version }}.zip
    #     fields: |
    #       update: "true"
    #       pkg: kodi
    #       version: ${{ steps.get_tag.outputs.version }}
    #       uploader: Paolo Brasolin
    #       email: paolo.brasolin@gmail.com 
